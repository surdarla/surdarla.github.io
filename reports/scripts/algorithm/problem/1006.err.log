Traceback (most recent call last):
  File "C:\Users\WAI\Documents\surdarla.github.io\.venv\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\WAI\Documents\surdarla.github.io\.venv\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\WAI\Documents\surdarla.github.io\.venv\Lib\site-packages\jupyter_core\utils\__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\WAI\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\WAI\Documents\surdarla.github.io\.venv\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\WAI\Documents\surdarla.github.io\.venv\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\WAI\Documents\surdarla.github.io\.venv\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
class Space:
    def __init__(self, personnel:int, in_or_out:str, changed:bool=False):
        self.personnel = personnel
        self.in_or_out = in_or_out
        self.changed = False
        
    def addable(self, other_space):
        global w
        if self.personnel + other_space.personnel <= w:
            return True
        else:
            return False
    
    

from typing import List
class Octagon:
    def __init__(self, inner_list:List, outer_list:List, result:int):
        global w,n
        inner_spaces = [Space(i, "in") for i in inner_list]
        outer_spaces = [Space(i, "out") for i in outer_list]
        for i in range(n):
            if not inner_spaces[i].changed:
                if  (outer_spaces[i].changed == False) and (inner_spaces[i].addable(outer_list[i])):
                    inner_spaces[i].changed, outer_spaces[i].changed = True, True
                elif inner_spaces[i].addable(inner_spaces[i+1]):
                    pass
                else:
                
            
        outer_list = [Space(i, "out") for i in outer_list]
        self.result = 0
        
------------------


[1;36m  Cell [1;32mIn[3], line 31[1;36m[0m
[1;33m    outer_list = [Space(i, "out") for i in outer_list][0m
[1;37m    ^[0m
[1;31mIndentationError[0m[1;31m:[0m expected an indented block after 'else' statement on line 28


